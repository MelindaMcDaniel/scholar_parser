{
  "name": "Scholar parser",
  "tagline": "Parses Google Scholar user profile information",
  "body": "#Scholar parser\r\n\r\n(highly experimental)\r\n\r\nThis class parses a profile page from Google Scholar for publication data and scientist stats. The page can be read directly from Google Scholar by supplying the user's profile ID, or by passing a HTML file saved from Scholar to the class.\r\n\r\n##Installation\r\nThis module requires PHP-PhantomJS which can be found at http://jonnnnyw.github.io/php-phantomjs/. For easy installation, I recommend using Composer (https://getcomposer.org/) and use the included composer.json file by executing the command\r\n```\r\nphp composer.phar install\r\n```\r\n\r\n##Example usage\r\nBelow is a very basic example. For a more elaborate one see the example.php file which uses a basic caching mechanism to not query Scholar with each page view request\r\n\r\n```php\r\n// Create a new instance of the parser class\r\nrequire_once(\"scholar_profile_parser.class.php\");\r\n$parser = new ScholarProfileParser();\r\n\r\n// The profile to parse (mine in this case)\r\n$profile_id = \"Pm3O_58AAAAJ&hl\";\r\n\r\n// Read the html from Scholar into a DOM object\r\n$parser->read_html_from_scholar_profile($scholar_id);\r\n// Parse publication data from the DOM\r\n$parser->parse_publications();\r\n// Parse stats from the DOM (H-Index, citation count, i10 index)\r\n$parser->parse_stats(); \r\n\r\n// Print the output\r\n$parser->print_parsed_data_raw();   //Basic output as stored in JSON\r\necho $parser->format_publications_in_APA();  //Formatted as HTML table\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}